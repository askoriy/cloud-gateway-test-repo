name: 'Terragrunt GitHub Actions'
on:
  - push

env:
  WORKDIR: ./frontend-multi-tenant/tenants-factory

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v1

      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '275.0.0'
          service_account_key: ${{ secrets.CI_CD_PIPELINE }}

      - run: |
          ls -la 
          pwd
          echo $GITHUB_WORKSPACE
      
      - name: Set Google GOOGLE_APPLICATION_CREDENTIALS
        run: |
          GOOGLE_APPLICATION_CREDENTIALS=$(echo ${{ secrets.CI_CD_PIPELINE}} | base64 -d)
          echo $GOOGLE_APPLICATION_CREDENTIALS > ./frontend-multi-tenant/tenants-factory/key.json
    
      - name: Download Terragrunt
        run: |
          cd $WORKDIR
          wget -O terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v0.21.9/terragrunt_linux_amd64
          chmod +x terragrunt

      - name: Get Versions
        run: |
          cd $WORKDIR
          ls -la
          ./terragrunt --version
          terraform --version
          pwd
        
      
      - name: Terragrunt init
        run: |
          cd $WORKDIR
          ls -la
          ./terragrunt init 
       
      - name: Terrugrunt plan
        run: |
          cd $WORKDIR
          ./terragrunt plan
        env: 
          GOOGLE_APPLICATION_CREDENTIALS: ./key.json

      # - name: 'Terraform Init'
      #   uses: hashicorp/terraform-github-actions@master
      #   with:
      #     tf_actions_version: 0.12.13
      #     tf_actions_subcommand: 'init'
      #     tf_actions_working_dir: './frontend-multi-tenant/tenants-factory/'
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     GOOGLE_APPLICATION_CREDENTIALS: ./key.json

      # - name: 'Terraform Plan'
      #   uses: hashicorp/terraform-github-actions@master
      #   with:
      #     tf_actions_version: 0.12.13
      #     tf_actions_subcommand: 'plan'
      #     tf_actions_working_dir: './frontend-multi-tenant/tenants-factory/'
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     GOOGLE_APPLICATION_CREDENTIALS: ./key.json

      # - name: 'Terraform Apply'
      #   uses: hashicorp/terraform-github-actions@master
      #   with:
      #     tf_actions_version: 0.12.13
      #     tf_actions_subcommand: 'apply'
      #     tf_actions_working_dir: './frontend-multi-tenant/tenants-factory/'
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     GOOGLE_APPLICATION_CREDENTIALS: ./key.json

      # - name: 'Terraform Output'
      #   uses: hashicorp/terraform-github-actions@master
      #   id: terraform
      #   with:
      #     tf_actions_version: 0.12.13
      #     tf_actions_subcommand: 'output'
      #     tf_actions_working_dir: './frontend-multi-tenant/tenants-factory/'
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     GOOGLE_APPLICATION_CREDENTIALS: ./key.json

      # - name: 'Set Env Vars'
      #   run: | 
      #     echo "::set-env name=TENANT_NAME_1::$(echo '${{ steps.terraform.outputs.tf_actions_output }}' | jq -r '.tenant_name.value[0]')"
      #     echo "::set-env name=TENANT_NAME_2::$(echo '${{ steps.terraform.outputs.tf_actions_output }}' | jq -r '.tenant_name.value[1]')"
      
      # - name: "Use templating"
      #   run: |  
      #     echo $TENANT_NAME_1
      #     echo $TENANT_NAME_2
      #     envsubst < ./frontend-multi-tenant/html/app_multitenancy_template.js > ./frontend-multi-tenant/html/app_multitenancy.js
      #     cat ./frontend-multi-tenant/html/app_multitenancy.js
          

      