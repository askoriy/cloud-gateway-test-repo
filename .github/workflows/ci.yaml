name: CI example

on:
  push:
    paths:
      - '.github/workflows/ci.yaml'
      - 'web-site/**'
      - 'example-api/**'
      - 'endpoints/**'

env: 
  PROJECT_ID: main-105
  REGION: us-central1
  IMAGE: web-site
  SERVICE_NAME: example-api
  API_GATEWAY: api-gateway-bf
  CONFIG_ID: 2020-01-20r11

jobs:
  firebase:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
      
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: ‘274.0.0’
        service_account_key: ${{ secrets.SERVICE_ACCOUNT_105 }}

    - run: | 
        gcloud config set run/region $REGION
        gcloud config set project $PROJECT_ID
    
    - name: Firebase Config 
      env: 
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      run: | 
         curl -sL https://firebase.tools | sudo bash
         echo "::set-env name=AUTH_APIKEY_105::$(firebase --token "$FIREBASE_TOKEN" setup:web --project main-104 | grep -oP '(?<="apiKey": ").*(?=")'"

    - name: Configure Firebase on the app side
      run: |
        envsubst < ./web-site/html/config_template.js > ./web-site/html/config.js
    

  build:
    needs: firebase
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
      
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: ‘274.0.0’
        service_account_key: ${{ secrets.SERVICE_ACCOUNT_105 }}
  
    - run: | 
        gcloud auth configure-docker
        gcloud config set run/platform managed
        gcloud config set run/region $REGION
        gcloud config set project $PROJECT_ID 

    - name: Build the Docker image web-site
      run: docker build ./web-site -t gcr.io/$PROJECT_ID/$IMAGE

    - name: Push image
      run: docker push gcr.io/$PROJECT_ID/$IMAGE
  
    - name: Cloud Run Deploy
      run: |
        gcloud run deploy $IMAGE --image gcr.io/$PROJECT_ID/$IMAGE --allow-unauthenticated

    - name: Build the Docker Image example-api
      run: docker build ./example-api -t gcr.io/$PROJECT_ID/$SERVICE_NAME

    - name: Push image
      run: docker push gcr.io/$PROJECT_ID/$SERVICE_NAME
    
    - name: Cloud Run Deploy Backend 
      run: |
           gcloud run deploy $SERVICE_NAME --image gcr.io/$PROJECT_ID/$SERVICE_NAME

  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v1
    
  #   - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
  #     with:
  #       version: ‘274.0.0’
  #       service_account_key: ${{ secrets.SERVICE_ACCOUNT_105 }}
    
  #   - run: | 
  #       gcloud auth configure-docker
  #       gcloud config set run/platform managed
  #       gcloud config set run/region $REGION
  #       gcloud config set project $PROJECT_ID
        
    
  #   - name: Deploy Initial API GW Service
  #     run: |
  #       gcloud run deploy $API_GATEWAY --image="gcr.io/endpoints-release/endpoints-runtime-serverless:2" --allow-unauthenticated
        
  #   - name: Set ENV vars
  #     run: | 
  #       echo "::set-env name=APIGW_HOST::$(gcloud run services describe $API_GATEWAY --format="value(status.url)" | sed -e 's#^https://##; s#/score/$##' )"
  #       echo "::set-env name=SERVICE_URL::$(gcloud run services describe $SERVICE_NAME --format="value(status.url)")"
   
  #   - name: Echo ENV vars 
  #     run: |
  #       echo $SERVICE_URL
  #       echo $APIGW_HOST
        
  #   - name: Create OpenApi document
  #     run: |
  #       envsubst < ./endpoints/openapi-run_template.yaml > ./endpoints/openapi_conf.yaml
  #       cat ./endpoints/openapi_conf.yaml
        
  #   - name: Deploy Endpoint Service with config    
  #     run: |
  #       gcloud endpoints services deploy ./endpoints/openapi_conf.yaml --project=$PROJECT_ID

  #   - name: Create Custom API GW Image
  #     run: |
  #        ./endpoints/gcloud-build-image.sh -s $APIGW_HOST -c $CONFIG_ID -p $PROJECT_ID

  #   - name: Deploy API GW Service With Custom Image
  #     run: |
  #       gcloud run deploy $API_GATEWAY --image="gcr.io/$PROJECT_ID/endpoints-runtime-serverless:$APIGW_HOST-$CONFIG_ID" --allow-unauthenticated  

    
    